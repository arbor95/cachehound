ď»żNotizen fĂĽr Entwickler:

1. Zugriff auf globale Objekte:
	Preferences pref = Global.getPref();	// PrĂ¤ferenzen
	Profile profile=Global.getProfile();	// Das aktuelle Profil
	MainTab mainTab;						// Das mainTab Objekt (EnthĂ¤lt alle Ansichten)

2. Aufzeichnung von internen Fehlern in der log.txt:
	Die Datei log.txt wird bei jedem Spidervorgang neu generiert.
	FĂĽr die Aufzeichnung von Fehlern (oder auch nur Ablaufverfolgungen wie z.B. in SpiderGC)
	stehen folgende Routinen zur VerfĂĽgung (alle in Preferences.java)

	public void log(String text)					// Beliebige Fehlermeldung mit Zeitstempel
	public void log(String message,Exception e) 	// Exception mit Zeitstempel (nutzt obige Funktion)
	public void log(String text,Throwable e, 		// Exception mit Zeitstempel und Stacktrace
		boolean withStackTrace)

	Beispiel:
	Global.getPref().log("Fehler bei xxx");

3. Debug-Schalter:
	Es besteht die MĂ¶glichkeit ĂĽber einen undokumentierten Schalter in der pref.xml
	"schlafenden" Debug-Code bei Probleme selektiv zu aktivieren. Dazu ist in der pref.xml
	die Zeile
		<debug value="true">
	einzufĂĽgen.
	Der Wert der debug Variablen kann dann wie folgt abgefragt werden:
		if(Global.getPref().debug) {
			// Code der nur ausgefĂĽhrt wird wenn debug Schalter gesetzt
			// z.B. ausfĂĽhrlichere Fehlermeldung
		}
