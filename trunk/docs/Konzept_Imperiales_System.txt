Konzept zur Meilenunterstützung
===============================

1. Verankerung in Preferences
CW bekommt eine zentrale Variable, die speichert, ob Entfernungen imperial
oder metrisch angegeben sind. Diese wird über die Preferences gesetzt und
gespeichert. 

2. Interne Rechnungen
Alle internen Berechnungen verwenden das metrische System. D.h.: Funktionen,
die Entferungen als Argumente entgegennehmen, tun dies in km bzw. m. 
Funktionsergebnisse sind stets in km  bzw. m. Ausnahmen siehe 4.

3. Darstellung
Werden Entferungen auf der Oberfläche ausgegeben, so werden sie ggf. 
in Meilen/Feet umgerechnet(*). Werden Entferungsdaten in der Oberfläche
eingegeben, so erfolgt vor der Verwendung ggf. eine Umrechnung in km
bzw. m.
Werden in der Oberfläche km verwendet, so werden im imperialen System
Meilen verwendet, analog m <-> Fuß.
(*) Dies erfordert die Identifikation aller Stellen, wo Entferungs-
angaben auf der Oberfläche aus- oder eingegeben werden.

4. Solver-Funktionen
Läuft CW im imperialen Modus, so erwartet der Anwender auch im Solver,
dass er Argumente als Meilen bzw. Fuß angeben kann.
Daher erwarten die vom Solver aufgerufenen Primärfunktionen (z.B. 
Parser.funcProject() ) ggf. Entferungen in Meilen. Die dahinter 
liegenden Arbeitsfunktionen verwenden Daten wie gehabt; die 
Umrechnung findet in der Primärfunktion statt.

5. Rechner
Ist das imperiale System eingestellt, so ist "Fuß" der Vorgabewert
für die Einheit.

6. Moving Map
Da ich die Map nicht nutze, habe ich keine Erfahrung, was dort an
Entferungen aus- oder eingegeben wird und ob irgendwelche Spezialitäten
zu beachten sind.

7. Anpassung der Oberfläche
Teilweise erscheinen auf der Oberfläche Einheiten, z.b. beim
Spiderradius. Diese Einheit muss entsprechend angepasst werden.
Kann man das im laufenden Betrieb (d.h. nach Erzeugen der Form) 
noch ändern? Sonst wäre 1. ein Fall für "Änderungen werden
erst nach Neustart wirksam."
  